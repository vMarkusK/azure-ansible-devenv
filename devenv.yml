---
- name: Create RG and VNet
  hosts: localhost
  connection: local
  gather_facts: false

  vars:
    rg_name: 'rg-devenv'
    location: 'swedencentral'
    vnet_name: 'vnet-devenv'
    vnet_address_prefixes_cidr: '172.20.0.0/16'

  tasks:
    - name: Create RG
      azure.azcollection.azure_rm_resourcegroup:
        name: '{{ rg_name }}'
        location: '{{ location }}'
        state: present
      register: rg

    - name: Pause for a few seconds to get RG Ready
      ansible.builtin.pause:
        seconds: 10
      when: rg.changed # noqa: no-handler

    - name: Create VNet
      azure.azcollection.azure_rm_virtualnetwork:
        name: '{{ vnet_name }}'
        resource_group: '{{ rg_name }}'
        address_prefixes_cidr: '{{ vnet_address_prefixes_cidr }}'
        state: present
      register: vnet

    - name: Pause for a few seconds to get VNet Ready
      ansible.builtin.pause:
        seconds: 10
      when: vnet.changed # noqa: no-handler

    - name: Create Subnets
      azure.azcollection.azure_rm_subnet:
        name: '{{ hostvars[item].subnet_name }}'
        address_prefix_cidr: '{{ hostvars[item].subnet_address_prefix_cidr }}'
        resource_group: '{{ rg_name }}'
        virtual_network_name: '{{ vnet_name }}'
        state: present
      register: subnet
      with_items:
        - "{{ groups['vnet-dev'] }}"

- name: Create VMs
  hosts: vnet-dev
  connection: local
  gather_facts: false

  vars:
    rg_name: 'rg-devenv'
    vnet_name: 'vnet-devenv'
    username: 'azureuser'

  tasks:

    - name: Create VMs
      azure.azcollection.azure_rm_virtualmachine:
        resource_group: "{{ rg_name }}"
        name: "vm-{{ hostvars[inventory_hostname].subnet_name }}"
        vm_size: Standard_B1s
        managed_disk_type: Standard_LRS
        admin_username: "{{ username }}"
        ssh_password_enabled: false
        ssh_public_keys:
          - path: '/home/{{ username }}/.ssh/authorized_keys'
            key_data: "{{ lookup('file', lookup('env', 'HOME') + '/.ssh/id_rsa.pub') }}"
        virtual_network_name: '{{ vnet_name }}'
        subnet_name: "{{ hostvars[inventory_hostname].subnet_name }}"
        boot_diagnostics:
          enabled: true
        image:
          offer: 0001-com-ubuntu-server-jammy
          publisher: canonical
          sku: 22_04-lts-gen2
          version: latest
      register: vm

    - name: Get my public IP
      community.general.ipify_facts:
      register: ip

    - name: Update rules on existing security group
      azure.azcollection.azure_rm_securitygroup:
        resource_group: '{{ rg_name }}'
        name: 'vm-{{ hostvars[inventory_hostname].subnet_name }}01'
        rules:
          - name: SSH
            protocol: Tcp
            source_address_prefix: '{{ ip.ansible_facts.ipify_public_ip }}'
            destination_port_range: 22
            access: Allow
            priority: 100
            direction: Inbound
